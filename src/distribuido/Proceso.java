/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package distribuido;

import static distribuido.Herramientas.listaProcesos;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author CESAR IVAN MTZ
 */
public class Proceso extends javax.swing.JFrame implements Runnable{
    
    private int time, referencia;
    Thread h1;
    /**
     * Creates new form Proceso
     */
    public Proceso() {
        initComponents();
    }
    
     public Proceso(int i){
        initComponents();
        this.referencia=i;
        this.jLabel4.setText("PROCESO "+i);
        h1 = new Thread(this);
       System.out.println("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTiempo = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tiempo");

        jButton1.setText("Envio Petici√≥n");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Peticiones Recibidas");

        jLabel3.setText("Cola de peticiones");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel4.setText("PROCESO");

        jLabel5.setText("Ejecucion");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton1)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel4)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //Herramientas.llenarOrden(this.referencia);
        Herramientas.setTotal(Herramientas.getTotal()+1);
         
        String name = this.jLabel4.getText()+": ";
        if(this.jTextFieldTiempo.getText().equals("ok")){
            this.time=0;
            for(int i=0;i<Herramientas.listaProcesos.size();i++)
               // if(i!=this.posicion)
                  Herramientas.listaProcesos.get(i).recibirMensaje(name+" ok");
        }else{
            int aux = Integer.parseInt(this.jTextFieldTiempo.getText());
            this.time=aux;
             for(int i=0;i<Herramientas.listaProcesos.size();i++)
               // if(i!=this.posicion)
                  Herramientas.listaProcesos.get(i).recibirMensaje(name+" Tiempo: "+aux);
        }
        
         //Herramientas.ordenRef[this.time] = Herramientas.getTotal()-1;
         
         if(Herramientas.total==Herramientas.listaProcesos.size()){
             //Desabilitar botones
             this.desabilitarBtns();
             //Ejecutar
             Herramientas.ejecutar();
             this.h1.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void desabilitarBtns() {
           for(int i=0;i<Herramientas.listaProcesos.size();i++){
               Herramientas.listaProcesos.get(i).jButton1.setEnabled(false);
               //System.out.println(Herramientas.listaProcesos.get(i).referencia+" "+Herramientas.listaProcesos.get(i).orden);
           }        
    }
    
      public void recibirMensaje(String msg){
        this.jTextArea1.setText(this.jTextArea1.getText()+"\n"+msg);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proceso().setVisible(true);
            }
        });
    }

    
    public void mensajeEjecucion(String aux){
          this.jTextArea3.setText(this.jTextArea3.getText()+"\n"+aux);
    }
    
       public void mensajeCola(String aux){
          this.jTextArea2.setText(this.jTextArea2.getText()+"\n"+aux);
       }
    
    public int getTime() {
        return time;
    }

    public void setTime(int tiempo) {
        this.time = tiempo;
    }

    public int getReferencia() {
        return referencia;
    }

    public void setReferencia(int referencia) {
        this.referencia = referencia;
    }
 
    
  
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextFieldTiempo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
            Thread ct = Thread.currentThread();
            boolean flag = true;
            
            while (ct == h1) {
                while(flag){
                
             for(int i=0;i<listaProcesos.size();i++){   
                    if(listaProcesos.get(i).getTime()!=0){
                        ///Envio de Ok del que perdi√≥ i+1
                        if(i+1!=listaProcesos.size())
                          for(int k=i+1;k<listaProcesos.size();k++){
                               listaProcesos.get(i).recibirMensaje("Proceso "+listaProcesos.get(k).getReferencia()+" dice ok.");
                        
                             try {
                                        Thread.sleep(2000);
                                    } catch (InterruptedException ex) {
                                       ex.printStackTrace();
                              }
                          }
                             
                        
                        ///Agregar a la cola
                          if(i+1!=listaProcesos.size())
                           for(int k=i+1;k<listaProcesos.size();k++){
                               listaProcesos.get(i).mensajeCola("En cola Proceso "+listaProcesos.get(k).getReferencia());
                          
                           try {
                                        Thread.sleep(2000);
                                    } catch (InterruptedException ex) {
                                       ex.printStackTrace();
                              }
                           }
                              
                           
                          //Ejecutar el proceso
                            for(int j=1;j<=listaProcesos.get(i).getTime();j++){
                            listaProcesos.get(i).mensajeEjecucion(i+" Tiempo "+j);
                                    try {
                                        Thread.sleep(1000);
                                    } catch (InterruptedException ex) {
                                       ex.printStackTrace();
                                    }
                            }
                            
                            if(i+1!=listaProcesos.size()){
                                listaProcesos.get(i+1).recibirMensaje("Proceso "+listaProcesos.get(i).getReferencia()+" termino Ok");
                            
                             try {
                                        Thread.sleep(2000);
                                    } catch (InterruptedException ex) {
                                       ex.printStackTrace();
                              }
                            }
                        }
                                
                    }
             
              flag=false;
            }       
         }     
       }
        
    
}

